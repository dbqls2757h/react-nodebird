{"ast":null,"code":"var _jsxFileName = \"/Users/yoobin/FOLDER/DEVELOPMENT/react-nodebird/front/pages/signup.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport Head from \"next/head\";\nimport { Form, Input } from 'antd';\nimport PropTypes from \"prop-types\";\nimport AppLayout from '../components/AppLayout';\n\nconst Singup = () => {\n  const [id, setId] = useInput('');\n  const [nickname, setNickname] = useInput('');\n  const [pwd, setPwd] = useInput(''); // const [id, setId] = useState('');\n  //\n  // const onChangeId = useCallback(() => {\n  //     setId(e.target.value)\n  // },[]);\n  //=> 중복되는 것들을 useInput custom hook으로 반복시킴\n\n  const onSubmit = useCallBack(() => {}, []);\n  return __jsx(React.Fragment, null, __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785 | NodeBird\")), __jsx(Form, {\n    onFinish: onsubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }), __jsx(Input, {\n    name: \"user-nick\",\n    value: nickname,\n    required: true,\n    onChange: onChangeNickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-pwd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }), __jsx(Input, {\n    name: \"user-pwd\",\n    value: pwd,\n    required: true,\n    onChange: onChangePwd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-pwd-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }), __jsx(Input, {\n    name: \"user-pwd-check\",\n    value: pwd,\n    required: true,\n    onChange: onChangePwdCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  })))));\n};\n\nLoginForm.PropTypes = {};\nexport default Singup;","map":{"version":3,"sources":["/Users/yoobin/FOLDER/DEVELOPMENT/react-nodebird/front/pages/signup.js"],"names":["React","useCallback","Head","Form","Input","PropTypes","AppLayout","Singup","id","setId","useInput","nickname","setNickname","pwd","setPwd","onSubmit","useCallBack","onsubmit","onChangeId","onChangeNickname","onChangePwd","onChangePwdCheck","LoginForm"],"mappings":"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","sourcesContent":["import React, {useCallback} from 'react';\nimport Head from \"next/head\";\nimport {Form, Input} from 'antd';\nimport PropTypes from \"prop-types\";\n\nimport AppLayout from '../components/AppLayout';\n\nconst Singup = () => {\n\n    const[id, setId] = useInput('')\n    const[nickname, setNickname] = useInput('')\n    const[pwd, setPwd] = useInput('')\n\n    // const [id, setId] = useState('');\n    //\n    // const onChangeId = useCallback(() => {\n    //     setId(e.target.value)\n    // },[]);\n    //=> 중복되는 것들을 useInput custom hook으로 반복시킴\n\n    const onSubmit = useCallBack(() => {\n\n    },[]);\n\n    return (\n        <>\n            <AppLayout>\n                <Head>\n                    <title>회원가입 | NodeBird</title>\n                </Head>\n                <Form onFinish={onsubmit}>\n                    <div>\n                        <label htmlFor=\"user-id\">아이디</label>\n                        <br/>\n                        <Input name=\"user-id\" value={id} required onChange={onChangeId}/>\n                    </div>\n                    <div>\n                        <label htmlFor=\"user-nick\">닉네임</label>\n                        <br/>\n                        <Input name=\"user-nick\" value={nickname} required onChange={onChangeNickname}/>\n                    </div>\n                    <div>\n                        <label htmlFor=\"user-pwd\">닉네임</label>\n                        <br/>\n                        <Input name=\"user-pwd\" value={pwd} required onChange={onChangePwd}/>\n                    </div>\n                    <div>\n                        <label htmlFor=\"user-pwd-check\">비밀번호체크</label>\n                        <br/>\n                        <Input\n                            name=\"user-pwd-check\"\n                            value={pwd}\n                            required\n                            onChange={onChangePwdCheck}\n                        />\n                        {/*{pwdError && <div style={{color: 'red'}}>비밀번호가 일치하지 않습니다</div>}*/}\n                    </div>\n                </Form>\n            </AppLayout>\n        </>\n    );\n};\n\nLoginForm.PropTypes = {\n\n}\n\nexport default Singup;\n"]},"metadata":{},"sourceType":"module"}